openapi: 3.1.0
info:
  title: API Reference
  version: '1.0'
  contact:
    name: Jonathon Robins
    email: Jonathon.Robins@pamediagroup.com
  summary: An API to facilitate the uploading of media Content into StreamAMGs CloudMatrix & MediaPlatform Products
  description: |-
    The CloudMatrix Upload API provides clients with the functionality to upload Media Content via a HTTP API with no dependencies on a technology or framework.

    The upload functionality allows clients to upload Rich Metadata alongside their media so that it is automatically available within CloudMatrix once the media entry is processed via MediaPlatform. 
tags:
  - name: Entry
  - name: Multipart
  - name: Search
  - name: Entitlement
  - name: Feed
  - name: Event
servers:
  - url: 'https://cloudmatrix.api.streamamg.com'
paths:
  /entry:
    parameters:
      - in: query
        schema:
          type: string
          default: en
        name: language
        required: false
        description: The Cloudmatrix language for custom attributes (representing a valid configured language).
    post:
      summary: Create a new CloudMatrix entry
      operationId: post-upload
      responses:
        '200':
          description: Success - reporting back any values that are invalid and not updated
          content:
            application/json:
              schema:
                description: status and message with optional list of invalid values for attributes ignored
                type: object
                x-examples:
                  example-1:
                    status: 200
                    message: Successfully uploaded
                    entryId: 0_xshqrl2n
                    uploadUrl: 'https://streamamg.s3.eu-west-2.amazonaws.com/example-1.mp4?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJJWZ7B6WCRGMKFGQ%2F20180210%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20180210T171315Z&X-Amz-Expires=1800&X-Amz-Signature=12b74b0788aa036bc7c3d03b3f20c61f1f91cc9ad8873e3314255dc479a25351&X-Amz-SignedHeaders=host'
                properties:
                  status:
                    type: number
                    enum:
                      - 200
                  message:
                    type: string
                    minLength: 1
                  entryId:
                    type: string
                    minLength: 1
                  uploadUrl:
                    type: string
                    minLength: 1
                  failed:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        reason:
                          type: string
                required:
                  - status
                  - message
                  - entryId
                  - uploadUrl
              examples:
                Example - Success:
                  value:
                    status: 200
                    message: Successfully uploaded
                    entryId: 0_xshqrl2n
                    uploadUrl: 'https://streamamg.s3.eu-west-2.amazonaws.com/example-1.mp4?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJJWZ7B6WCRGMKFGQ%2F20180210%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20180210T171315Z&X-Amz-Expires=1800&X-Amz-Signature=12b74b0788aa036bc7c3d03b3f20c61f1f91cc9ad8873e3314255dc479a25351&X-Amz-SignedHeaders=host'
                Example - Success With Invalid Values Reported:
                  value:
                    status: 200
                    message: Successfully uploaded
                    entryId: 0_xshqrl2n
                    uploadUrl: 'https://streamamg.s3.eu-west-2.amazonaws.com/example-1.mp4?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJJWZ7B6WCRGMKFGQ%2F20180210%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20180210T171315Z&X-Amz-Expires=1800&X-Amz-Signature=12b74b0788aa036bc7c3d03b3f20c61f1f91cc9ad8873e3314255dc479a25351&X-Amz-SignedHeaders=host'
                    failed:
                      - id: c490887c-c21b-4bda-b59a-8ca1ee88d8a8
                        reason: Invalid value for attribute type specified
                      - id: a61de76c-e367-4c63-93e0-2d6fd6e256cf
                        reason: Invalid value for attribute type specified
        '400':
          description: Bad Request - payload shape or attribute identifiers are invalid (nothing created)
          content:
            application/json:
              schema:
                description: Status and message and optional list of invalid attribute identifiers (nothing created)
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 400
                  message:
                    type: string
                    minLength: 1
                  failed:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        reason:
                          type: string
                required:
                  - status
                  - message
              examples:
                Invalid Request:
                  value:
                    status: 400
                    message: Bad Request Exception
                Invalid Attributes:
                  value:
                    status: 400
                    message: Failed to create attributes
                    failed:
                      - id: c490887c-c21b-4bda-b59a-8ca1ee88d8a8
                        reason: Attribute identifier is invalid
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                description: Forbidden
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                Example:
                  value:
                    message: Forbidden
        '500':
          description: Application Error
          content:
            application/json:
              schema:
                description: On an unexpected error a generic error message is returned
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Example:
                  value:
                    status: 500
                    message: Unexpected Error
      description: |-
        <!--
        focus: false
        -->
        ![In Review](https://img.shields.io/badge/Status-In%20Review-green?style=flat-square)

        In order to upload a media entry, first an initial API call to retrive a signed URL must be generated. This signed URL will allow you to directly upload the media asset to the storage location via HTTP.

        The initial API call should consist of attributes (metadata) you would like to store against your asset within the CloudMatrix Platform and any associated publication details for the entry you are uploading.

        **Note**: 
        - This method of upload only supports up to 5GB per asset, for larger assets please refer to the multipart upload.
        - This endpoint uploads only the VOD entries
      tags:
        - Entry
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                filename:
                  type: string
                  minLength: 1
                  description: The name of the file passed
                attributes:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  description: The metadata attributes
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        minLength: 1
                        description: CloudMatrix attribute id (customer attribute configuration identifier)
                      value:
                        type: string
                        minLength: 1
                        description: CloudMatrix attribute value (valid report option for a dropdown type)
                      items:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        description: CloudMatrix attribute where value is a collection
                        items:
                          type: object
                          additionalProperties: false
                          properties:
                            value:
                              type: string
                              minLength: 1
                              description: CloudMatrix attribute value (valid report option for a dropdown type)
                          required:
                            - value
                    required:
                      - id
                publication:
                  type: object
                  required:
                    - publish
                    - from
                  properties:
                    publish:
                      type: boolean
                      description: CloudMatrix attribute flag to indicate whether to publish the attribute or not
                      default: false
                    from:
                      type: string
                      minLength: 1
                      description: |-
                        From date is required only when publish is set to true.
                        Expected format is ISO 8601.
                    to:
                      type: string
                      minLength: 1
                      description: Expected format is ISO 8601.
                    config:
                      type: array
                      uniqueItems: true
                      minItems: 1
                      items:
                        type: object
                        properties:
                          target:
                            type: string
                            minLength: 1
                            description: CloudMatrix target uuid
                          from:
                            type: string
                            minLength: 1
                            description: Expected format is ISO 8601.
                          to:
                            type: string
                            minLength: 1
                            description: Expected format is ISO 8601.
                          region:
                            type: array
                            uniqueItems: true
                            minItems: 1
                            description: CloudMatrix attribute
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  minLength: 1
                                  description: CloudMatrix region uuid
                                from:
                                  type: string
                                  minLength: 1
                                  description: Expected format is ISO 8601.
                                to:
                                  type: string
                                  minLength: 1
                                  description: Expected format is ISO 8601.
                              required:
                                - id
                        required:
                          - target
                          - region
              required:
                - attributes
                - publication
            examples:
              Example:
                value:
                  filename: video.mp4
                  attributes:
                    - id: e078d72a-aad4-4b68-9227-e0bde0b35c6d
                      value: Some Title
                    - id: 57e816fb-03b7-4706-a99f-5c6ef8d18ada
                      value: Some Description
                    - id: 57e816fb-03b7-4706-a99f-5c6ef8d18adb
                      value: Some custom field
                    - id: e078d72a-aad4-4b68-9227-e0bde0b35c6z
                      items:
                        - value: entitlement1
                        - value: entitlement2
                    - id: a61de76c-e367-4c63-93e0-2d6fd6e256cf
                      items:
                        - value: Team A Report Value
                        - value: Team B Report Value
                  publication:
                    publish: true
                    from: '2022-03-06T22:51:25Z'
                    to: '2022-06-06T22:51:25Z'
                    config:
                      - target: 54fc1851-cf8a-4d7c-86fb-9cc7d8d1ff5c
                        region:
                          - id: 067f103a-e1ca-461b-8ef8-a4f681a9f6d2
                            from: '2022-03-06T22:51:25Z'
                            to: '2022-06-06T22:51:25Z'
                          - id: 067f103a-e1ca-461b-8ef8-a4f681a9f6d3
                            from: '2022-03-06T22:51:25Z'
                            to: '2022-06-06T22:51:25Z'
                      - target: 8b6a094d-59e3-4a31-8324-19e1366fca55
                        from: '2022-03-06T22:51:25Z'
                        to: '2022-06-06T22:51:25Z'
                        region:
                          - from: '2022-03-06T22:51:25Z'
                            to: '2022-06-06T22:51:25Z'
                            id: 067f103a-e1ca-461b-8ef8-a4f681a9f6d2
        description: The body should contain the additional CloudMatrix Metadata you would like to store along side the entry.
      security:
        - x-api-key: []
  '/entry/{entryId}':
    parameters:
      - in: path
        schema:
          type: string
        name: entryId
        required: true
        description: The Cloudmatrix entry id to update (representing the article which must already exist).
      - in: query
        schema:
          type: string
          default: en
        name: language
        required: false
        description: The Cloudmatrix language for custom attributes (representing a valid configured language).
    patch:
      summary: Update Entry Attributes
      operationId: patch-attributes
      responses:
        '200':
          description: Success - reporting back any values that are invalid and not updated
          content:
            application/json:
              schema:
                description: status and message with optional list of invalid values for attributes ignored
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 200
                  message:
                    type: string
                    minLength: 1
                  failed:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        reason:
                          type: string
                required:
                  - status
                  - message
              examples:
                Example - Success:
                  value:
                    status: 200
                    message: Attributes updated successfully
                Example - Success With Invalid Values Reported:
                  value:
                    status: 200
                    message: Attributes updated successfully
                    failed:
                      - id: c490887c-c21b-4bda-b59a-8ca1ee88d8a8
                        reason: Invalid value for attribute type specified
                      - id: a61de76c-e367-4c63-93e0-2d6fd6e256cf
                        reason: Invalid value for attribute type specified
        '400':
          description: Bad Request - payload shape or attribute identifiers are invalid (nothing updated)
          content:
            application/json:
              schema:
                description: Status and message and optional list of invalid attribute identifiers (nothing updated)
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 400
                  message:
                    type: string
                    minLength: 1
                  failed:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        reason:
                          type: string
                required:
                  - status
                  - message
              examples:
                Invalid Request:
                  value:
                    status: 400
                    message: Bad Request Exception
                Invalid Attributes:
                  value:
                    status: 400
                    message: 'Not all attributes found: none updated'
                    failed:
                      - id: c490887c-c21b-4bda-b59a-8ca1ee88d8a8
                        reason: Attribute identifier is invalid
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                description: Forbidden
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                Example:
                  value:
                    message: Forbidden
        '500':
          description: Validation Error
          content:
            application/json:
              schema:
                description: On an unexpected error a generic error message is returned
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Example:
                  value:
                    status: 500
                    message: Unexpected Error
      description: |-
        <!--
        focus: false
        -->
        ![In Review](https://img.shields.io/badge/Status-In%20Review-green?style=flat-square)

        The endpoint updates existing CloudMatrix media entry attributes.
      tags:
        - Entry
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                attributes:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  description: The metadata attributes (either as a single value or a collection of values).
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        minLength: 1
                        description: CloudMatrix attribute id (media asset configured custom field identifier)
                      value:
                        type: string
                        minLength: 1
                        description: CloudMatrix attribute value (media asset configured custom field value)
                      items:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        description: CloudMatrix attribute where value is a collection.
                        items:
                          type: object
                          additionalProperties: false
                          properties:
                            value:
                              type: string
                              minLength: 1
                              description: CloudMatrix attribute value (media asset configured custom field value)
                          required:
                            - value
                    required:
                      - id
              required:
                - attributes
            examples:
              String Value Example:
                value:
                  attributes:
                    - id: e078d72a-aad4-4b68-9227-e0bde0b35c6d
                      value: Updated Title
              Integer Value Example:
                value:
                  attributes:
                    - id: 57e816fb-03b7-4706-a99f-5c6ef8d18ada
                      value: '123'
              Boolean Value Example:
                value:
                  attributes:
                    - id: 57e816fb-03b7-4706-a99f-5c6ef8d18adb
                      value: 'true'
              Multi-Value Example:
                value:
                  attributes:
                    - id: e078d72a-aad4-4b68-9227-e0bde0b35c6z
                      items:
                        - value: team1
                        - value: team2
              Date Value Example:
                value:
                  attributes:
                    - id: 7ac5484e-ec8c-45f6-9437-95c909f5d41d
                      value: '2022-02-24'
              Time Value Example:
                value:
                  attributes:
                    - id: 17cfb9e1-1775-41a8-8628-1cf053551c73
                      value: '15:30'
              Datetime Value Example:
                value:
                  attributes:
                    - id: cdb8eb34-917f-4e45-b617-a6d994d00d2c
                      value: '2022-02-24 11:30:20'
                    - id: cdb8eb34-917f-4e45-b617-a6d994d00d2c
                      value: '2022/02/24 11:30:20'
        description: |-
          The body should contain the additional CloudMatrix Metadata attributes you would like to update. 

          The value(s) supplied must be of the correct type for the media asset configured custom field (see examples)

          Invalid value(s) will result in a status code of 500 being returned (see responses) detailing the error-prone 
          attribute identifier.

          Any error (validation or non-existent custom attribute etc) will result in no changes being updated in the 
          entire payload. If all the changes are valid and updates are possible then they will all be committed to the 
          database in one transaction.
      parameters: []
      security:
        - x-api-key: []
  /multipart/start:
    put:
      summary: Start multipart upload
      operationId: put-multipart-start
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  entryId:
                    type: string
                    minLength: 1
                  uploadId:
                    type: string
                    minLength: 1
                required:
                  - entryId
                  - uploadId
                x-examples:
                  example-1:
                    entryId: 0_tsdqrl2p
                    uploadId: 9c16caf8-7f71-11ec-a8a3-0242ac120002
              examples:
                Example:
                  value:
                    entryId: 0_tsdqwl2p
                    uploadId: 9c16caf8-7f71-11ec-a8a3-0242ac120002
      description: |-
        <!--
        focus: false
        -->
        ![In Review](https://img.shields.io/badge/Status-In%20Review-green?style=flat-square)

        For larger uploads (Larger than 5GB) you should utilise the multipart API, this allows the upload to handle partial uploads.

        Like the upload process this has multiple steps, the first step you must initialise the multipart upload process by calling the start endpoint.
      tags:
        - Multipart
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  attributes:
                    - id: e078d72a-aad4-4b68-9227-e0bde0b35c6d
                      value: Some Title
                      items:
                        - value: Team A Report Value
                        - value: Team B Report Value
                    - id: 57e816fb-03b7-4706-a99f-5c6ef8d18ada
                      value: Some Description
                    - id: 57e816fb-03b7-4706-a99f-5c6ef8d18adb
                      value: Some custom field
                    - id: e078d72a-aad4-4b68-9227-e0bde0b35c6z
                      items:
                        - value: entitlement1
                        - value: entitlement2
                    - id: a61de76c-e367-4c63-93e0-2d6fd6e256cf
                      items:
                        - value: Team A Report Value
                        - value: Team B Report Value
                  publication:
                    publish: true
                    from: '2022-03-06T22:51:25Z'
                    to: '2022-06-06T22:51:25Z'
                    config:
                      - target: 8b6a094d-59e3-4a31-8324-19e1366fca55
                        region:
                          - id: 067f103a-e1ca-461b-8ef8-a4f681a9f6d2
                            from: '2022-03-06T22:51:25Z'
                            to: '2022-06-06T22:51:25Z'
                          - id: 067f103a-e1ca-461b-8ef8-a4f681a9f6d3
                            from: '2022-03-06T22:51:25Z'
                            to: '2022-06-06T22:51:25Z'
                      - target: 54fc1851-cf8a-4d7c-86fb-9cc7d8d1ff5c
                        from: '2022-03-06T22:51:25Z'
                        to: '2022-06-06T22:51:25Z'
                        region:
                          - from: '2022-03-06T22:51:25Z'
                            to: '2022-06-06T22:51:25Z'
                            id: 067f103a-e1ca-461b-8ef8-a4f681a9f6d2
              properties:
                attributes:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  description: The metadata attributes
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        minLength: 1
                        description: CloudMatrix attribute id
                      value:
                        type: string
                        minLength: 1
                        description: CloudMatrix attribute value (valid report option for a dropdown type)
                      items:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        description: CloudMatrix attribute where value is a collection
                        items:
                          type: object
                          additionalProperties: false
                          properties:
                            value:
                              type: string
                              minLength: 1
                              description: CloudMatrix attribute value (valid report option for a dropdown type)
                          required:
                            - value
                    required:
                      - id
                publication:
                  type: object
                  required:
                    - publish
                    - from
                  properties:
                    publish:
                      type: boolean
                      description: CloudMatrix attribute flag to indicate whether to publish the attribute or not
                      default: false
                    from:
                      type: string
                      minLength: 1
                      description: |-
                        From date is required only when publish is set to true.
                        Expected format is ISO 8601.
                    to:
                      type: string
                      minLength: 1
                      description: Expected format is ISO 8601.
                    config:
                      type: array
                      uniqueItems: true
                      minItems: 1
                      items:
                        type: object
                        properties:
                          target:
                            type: string
                            minLength: 1
                            description: CloudMatrix target uuid
                          from:
                            type: string
                            minLength: 1
                            description: Expected format is ISO 8601.
                          to:
                            type: string
                            minLength: 1
                            description: Expected format is ISO 8601.
                          region:
                            type: array
                            uniqueItems: true
                            minItems: 1
                            description: 'CloudMatrix attribute '
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  minLength: 1
                                  description: CloudMatrix region uuid
                                from:
                                  type: string
                                  minLength: 1
                                  description: Expected format is ISO 8601.
                                to:
                                  type: string
                                  minLength: 1
                                  description: Expected format is ISO 8601.
                              required:
                                - id
                        required:
                          - target
                          - region
              required:
                - attributes
                - publication
            examples:
              Example:
                value:
                  attributes:
                    - id: e078d72a-aad4-4b68-9227-e0bde0b35c6d
                      value: Some Title
                    - id: 57e816fb-03b7-4706-a99f-5c6ef8d18ada
                      value: Some Description
                    - id: 57e816fb-03b7-4706-a99f-5c6ef8d18adb
                      value: Some custom field
                    - id: e078d72a-aad4-4b68-9227-e0bde0b35c6z
                      items:
                        - value: entitlement1
                        - value: entitlement2
                    - id: a61de76c-e367-4c63-93e0-2d6fd6e256cf
                      items:
                        - value: Team A Report Value
                        - value: Team B Report Value
                  publication:
                    publish: true
                    from: '2022-03-06T22:51:25Z'
                    to: '2022-06-06T22:51:25Z'
                    config:
                      - target: 54fc1851-cf8a-4d7c-86fb-9cc7d8d1ff5c
                        region:
                          - id: 067f103a-e1ca-461b-8ef8-a4f681a9f6d2
                            from: '2022-03-06T22:51:25Z'
                            to: '2022-06-06T22:51:25Z'
                          - id: 067f103a-e1ca-461b-8ef8-a4f681a9f6d3
                            from: '2022-03-06T22:51:25Z'
                            to: '2022-06-06T22:51:25Z'
                      - target: 8b6a094d-59e3-4a31-8324-19e1366fca55
                        from: '2022-03-06T22:51:25Z'
                        to: '2022-06-06T22:51:25Z'
                        region:
                          - from: '2022-03-06T22:51:25Z'
                            to: '2022-06-06T22:51:25Z'
                            id: 067f103a-e1ca-461b-8ef8-a4f681a9f6d2
        description: The body should contain the additional CloudMatrix Metadata you would like to store along side the entry.
      security:
        - x-api-key: []
  /multipart/upload:
    put:
      summary: Request a upload URL
      operationId: put-multipart-upload
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    partNumber: 1
                    uploadId: 9c16caf8-7f71-11ec-a8a3-0242ac120002
                    etag: 33a64df551425fcc55e4d42a148795d9f25f89d4
                properties:
                  partNumber:
                    type: number
                  uploadId:
                    type: string
                    minLength: 1
                  uploadUrl:
                    type: string
                    minLength: 1
                required:
                  - partNumber
                  - uploadId
                  - uploadUrl
              examples:
                Example:
                  value:
                    partNumber: 1
                    uploadId: 9c16caf8-7f71-11ec-a8a3-0242ac120002
                    uploadUrl: 'https://streamamg.s3.eu-west-2.amazonaws.com/example-1.mp4?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJJWZ7B6WCRGMKFGQ%2F20180210%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20180210T171315Z&X-Amz-Expires=1800&X-Amz-Signature=12b74b0788aa036bc7c3d03b3f20c61f1f91cc9ad8873e3314255dc479a25351&X-Amz-SignedHeaders=host'
          headers: {}
      description: |-
        <!--
        focus: false
        -->
        ![In Review](https://img.shields.io/badge/Status-In%20Review-green?style=flat-square)

        The multipart upload endpoint allows you to generate a signed URL for the binary chunk you want to upload.

        It is important that you store a the etag response for each upload as this is required for the final step of completing the multiple upload.
      tags:
        - Multipart
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  partNumber: 1
                  uploadId: 9c16caf8-7f71-11ec-a8a3-0242ac120002
              properties:
                filename:
                  type: string
                partNumber:
                  type: number
                uploadId:
                  type: string
                  minLength: 1
              required:
                - partNumber
                - uploadId
            examples:
              Example:
                value:
                  filename: example-2.mp4
                  partNumber: 1
                  uploadId: 9c16caf8-7f71-11ec-a8a3-0242ac120002
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
        description: The request body must contain the part number and the upload id of the partial upload chunk.
      security:
        - x-api-key: []
    parameters: []
  '/api/v1/{apiUserId}/{apiKey}/{targetId}/{languageCode}/search':
    parameters:
      - schema:
          type: string
        name: apiUserId
        in: path
        required: true
        description: Guid identifying the requesting client
      - schema:
          type: string
        name: apiKey
        in: path
        required: true
        description: Second layer encrypted identifier for the requesting client
      - schema:
          type: string
        name: targetId
        in: path
        description: Guid identifying the target where articles are allowed to be published
        required: true
      - schema:
          type: string
        name: languageCode
        in: path
        required: true
        description: Two characters ISO language code
    get:
      summary: Article search
      tags:
        - Search
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  metaData:
                    type: object
                    additionalProperties: true
                  itemData:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        mediaData:
                          type: object
                          properties:
                            mediaType:
                              type: string
                            entryId:
                              type: string
                            entryStatus:
                              type: string
                            thumbnailUrl:
                              type: string
                        sortData:
                          type: array
                          items:
                            type: object
                            properties: {}
                        metaData:
                          type: object
                          additionalProperties: true
                        publicationData:
                          type: object
                          properties:
                            createdAt:
                              type: string
                            updatedAt:
                              type: string
                            released:
                              type: boolean
                            releaseFrom:
                              type: string
                            releaseTo:
                              type: string
                  pagingData:
                    type: object
                    properties:
                      totalCount:
                        type: integer
                      itemCount:
                        type: integer
                      pageCount:
                        type: integer
                      pageSize:
                        type: integer
                      pageIndex:
                        type: integer
                x-examples:
                  example-1:
                    metaData: {}
                    itemData:
                      - id: ae412bb2-bf6a-4568-9af0-3e959db35b0c
                        mediaData:
                          mediaType: OnDemand
                          entryId: 0_aj8swfbd
                          entryStatus: Ready
                          thumbnailUrl: 'https://open.http.mp.streamamg.com/p/3000759/sp/300075900/thumbnail/entry_id/0_aj8swfbd/'
                        sortData: []
                        metaData: {}
                        publicationData:
                          createdAt: '2022-06-21T15:48:55'
                          updatedAt: '2022-06-30T16:37:52'
                          released: true
                          releaseFrom: '2022-06-21T15:48:55'
                          releaseTo: '9999-12-31T23:59:59.9999999'
                    pagingData:
                      totalCount: 1
                      itemCount: 1
                      pageCount: 1
                      pageSize: 50
                      pageIndex: 0
              examples:
                example-1:
                  value:
                    metaData: {}
                    itemData:
                      - id: ae412bb2-bf6a-4568-9af0-3e959db35b0c
                        mediaData:
                          mediaType: OnDemand
                          entryId: 0_aj8swfbd
                          entryStatus: Ready
                          thumbnailUrl: 'https://open.http.mp.streamamg.com/p/3000759/sp/300075900/thumbnail/entry_id/0_aj8swfbd/'
                        sortData: []
                        metaData:
                          home_team: t14
                          body: 'A sample media '
                          home_players:
                            - p116535
                            - p60706
                            - p464353
                            - p200720
                            - p490138
                            - p433019
                          opta_fixture: '2210294'
                          content_name:
                            - highlights
                          away_players:
                            - p109745
                            - p20310
                            - p228286
                            - p431019
                            - p102380
                            - p82263
                          competition: '8'
                          content_type:
                            - Full replays
                          away_team: t8
                          livescoreplayers:
                            - '95536'
                            - '8600'
                            - '9483'
                            - '81637'
                          sysentryentitlements:
                            - basic
                            - paid
                          ground: anfield
                          country: VI
                          createdat: '2022-06-26T23:59:57'
                          VideoDuration: 31
                          optaseriesdropdown: 3
                          opta_season: '2021'
                          title: file_example_MP4_640_3MG
                          episode: 6
                          tags:
                            - Replay
                            - Football
                        publicationData:
                          createdAt: '2022-06-21T15:48:55'
                          updatedAt: '2022-07-04T10:03:22'
                          released: true
                          releaseFrom: '2022-06-01T15:48:55'
                          releaseTo: '9999-12-31T23:59:59.9999999'
                    pagingData:
                      totalCount: 1
                      itemCount: 1
                      pageCount: 1
                      pageSize: 50
                      pageIndex: 0
        '500':
          description: Internal Server Error
      operationId: get-api-v1-apiUserId-apiKey-targetId-languageCode
      description: |
        Searches the articles which are published on to the target which matches the "targetid" path parameter. The requesting user identified with the {userId} and {userKey} must have the access to the target idenitified by {targetid} to get a valid response. Target resolves to a set of country and so request will be responded only when requests coming from countries under the target. 

        Json reponse containing atciles based on a provided "query string" in query parameters of the request. 
        This query uses a syntax to parse and split the provided query string based on operators, such as AND or NOT. The query then analyzes each split text independently before returning matching documents.

        The entire reference of the query string query syntax can be found at
        https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html
      parameters:
        - schema:
            type: string
          in: query
          name: query
          description: Elastic search query string query. The field must be qualified with the section in the body like metadata.title
        - schema:
            type: number
          in: query
          name: pageIndex
          description: 'Page index. '
        - schema:
            type: number
          in: query
          name: pageSize
          description: 'Page Size '
        - schema:
            type: string
          in: query
          name: sortBy
          description: The field name qualified with the section in the body like metadata.title.
        - schema:
            type: string
          in: query
          name: sortOrder
          description: '"asc" or "desc"'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              example-1:
                value: {}
          application/xml:
            schema:
              type: object
              properties: {}
            examples:
              example-1:
                value: {}
  /multipart/complete:
    put:
      summary: Complete a multipart upload
      operationId: put-multipart-complete
      responses:
        '200':
          description: OK
      description: |-
        <!--
        focus: false
        -->
        ![In Review](https://img.shields.io/badge/Status-In%20Review-green?style=flat-square)

        The final part of the multipart upload is the completion step. This request should be called when all chunks of the data have been sent. 
      tags:
        - Multipart
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  uploadId: 9c16caf8-7f71-11ec-a8a3-0242ac120002
                  parts:
                    - partNumber: 1
                      etag: 33a64df551425fcc55e4d42a148795d9f25f89d4
                    - partNumber: 2
                      etag: 44a64df551425fcc55e4d42a148795d9f25f89d5
                    - partNumber: 2
                      etag: 55a64df551425fcc55e4d42a148795d9f25f89d6
              properties:
                filename:
                  type: string
                uploadId:
                  type: string
                  minLength: 1
                parts:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items:
                    type: object
                    properties:
                      partNumber:
                        type: number
                      etag:
                        type: string
                        minLength: 1
                    required:
                      - partNumber
                      - etag
              required:
                - uploadId
                - parts
            examples:
              Example:
                value:
                  filename: example-2.mp4
                  uploadId: 9c16caf8-7f71-11ec-a8a3-0242ac120002
                  parts:
                    - partNumber: 1
                      etag: 33a64df551425fcc55e4d42a148795d9f25f89d4
                    - partNumber: 2
                      etag: 44a64df551425fcc55e4d42a148795d9f25f89d5
                    - partNumber: 2
                      etag: 55a64df551425fcc55e4d42a148795d9f25f89d6
        description: The request body should contain a reference to each part along with the Etag of each upload.
    parameters: []
  '/api/v1/{apiUserId}/{apiKey}/{languageCode}/search':
    parameters:
      - schema:
          type: string
        name: apiUserId
        in: path
        required: true
      - schema:
          type: string
        name: apiKey
        in: path
        required: true
      - schema:
          type: string
        name: languageCode
        in: path
        required: true
    get:
      summary: Unrestricted Article Search
      tags:
        - Search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    metaData: {}
                    itemData:
                      - id: ae412bb2-bf6a-4568-9af0-3e959db35b0c
                        mediaData:
                          mediaType: OnDemand
                          entryId: 0_aj8swfbd
                          entryStatus: Ready
                          thumbnailUrl: 'https://open.http.mp.streamamg.com/p/3000759/sp/300075900/thumbnail/entry_id/0_aj8swfbd/'
                        sortData: []
                        metaData: {}
                        publicationData:
                          createdAt: '2022-06-21T15:48:55'
                          updatedAt: '2022-06-30T16:37:52'
                          released: true
                          releaseFrom: '2022-06-21T15:48:55'
                          releaseTo: '9999-12-31T23:59:59.9999999'
                    pagingData:
                      totalCount: 1
                      itemCount: 1
                      pageCount: 1
                      pageSize: 50
                      pageIndex: 0
                properties:
                  metaData:
                    type: object
                    additionalProperties: true
                  itemData:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        mediaData:
                          type: object
                          properties:
                            mediaType:
                              type: string
                            entryId:
                              type: string
                            entryStatus:
                              type: string
                            thumbnailUrl:
                              type: string
                        sortData:
                          type: array
                          items:
                            type: object
                        metaData:
                          type: object
                          additionalProperties: true
                        publicationData:
                          type: object
                          properties:
                            createdAt:
                              type: string
                            updatedAt:
                              type: string
                            released:
                              type: boolean
                            releaseFrom:
                              type: string
                            releaseTo:
                              type: string
                  pagingData:
                    type: object
                    properties:
                      totalCount:
                        type: integer
                      itemCount:
                        type: integer
                      pageCount:
                        type: integer
                      pageSize:
                        type: integer
                      pageIndex:
                        type: integer
              examples:
                example-1:
                  value:
                    metaData: {}
                    itemData:
                      - id: ae412bb2-bf6a-4568-9af0-3e959db35b0c
                        mediaData:
                          mediaType: OnDemand
                          entryId: 0_aj8swfbd
                          entryStatus: Ready
                          thumbnailUrl: 'https://open.http.mp.streamamg.com/p/3000759/sp/300075900/thumbnail/entry_id/0_aj8swfbd/'
                        sortData: []
                        metaData:
                          home_team: t14
                          body: 'A sample media '
                          home_players:
                            - p116535
                            - p60706
                            - p464353
                            - p200720
                            - p490138
                            - p433019
                          opta_fixture: '2210294'
                          content_name:
                            - highlights
                          away_players:
                            - p109745
                            - p20310
                            - p228286
                            - p431019
                            - p102380
                            - p82263
                          competition: '8'
                          content_type:
                            - Full replays
                          away_team: t8
                          livescoreplayers:
                            - '95536'
                            - '8600'
                            - '9483'
                            - '81637'
                          sysentryentitlements:
                            - basic
                            - paid
                          ground: anfield
                          country: VI
                          createdat: '2022-06-26T23:59:57'
                          VideoDuration: 31
                          optaseriesdropdown: 3
                          opta_season: '2021'
                          title: file_example_MP4_640_3MG
                          episode: 6
                          tags:
                            - Replay
                            - Football
                        publicationData:
                          createdAt: '2022-06-21T15:48:55'
                          updatedAt: '2022-06-30T16:37:52'
                          released: true
                          releaseFrom: '2022-06-21T15:48:55'
                          releaseTo: '9999-12-31T23:59:59.9999999'
                    pagingData:
                      totalCount: 1
                      itemCount: 1
                      pageCount: 1
                      pageSize: 50
                      pageIndex: 0
        '500':
          description: Internal Server Error
      operationId: get-apiUserId-apiKey-targetId-languageCode-search
      description: |-
        Searches the articles published on any target. Request coming from a valid  user from any country will be responded with the list of artciles provided articles are published. 

        Json reponse containing atciles based on a provided "query string" in query parameters of the request. 
        This query uses a syntax to parse and split the provided query string based on operators, such as AND or NOT. The query then analyzes each split text independently before returning matching documents.

        corThe entire reference of the query string query syntax can be found at
        https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html
  '/api/v1/entryentitlements/{entryId}':
    parameters:
      - schema:
          type: string
        name: entryId
        in: path
        required: true
        description: 10 characters alphanumeric Id identifying media entry
    get:
      summary: Entry Entitlement
      tags:
        - Entitlement
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  entitlement:
                    type: array
                    items:
                      type: string
                  ttl:
                    type: integer
                x-examples:
                  example-1:
                    entitlement:
                      - paid
                      - basic
                    ttl: 90
              examples:
                example-1:
                  value:
                    entitlement:
                      - paid
                      - basic
                    ttl: 90
        '500':
          description: Internal Server Error
      operationId: get-entryentitlements-entryId
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      description: 'Returns the list of entitlement and Time to live (TTL) for the "entry" identify by the entryid. '
  '/api/v1/{apiUserId}/{apiKey}/{languageCode}/feed/{feedId}':
    parameters:
      - schema:
          type: string
        name: apiUserId
        in: path
        required: true
      - schema:
          type: string
        name: apiKey
        in: path
        required: true
      - schema:
          type: string
        name: languageCode
        in: path
        required: true
      - schema:
          type: string
        name: feedId
        in: path
        required: true
    get:
      summary: Unrestricted Feed
      tags:
        - Feed
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  metaData:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      title:
                        type: string
                      description:
                        type: 'null'
                      target:
                        type: string
                  itemData:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        mediaData:
                          type: object
                          properties:
                            mediaType:
                              type: string
                            entryId:
                              type: string
                            entryStatus:
                              type: string
                            thumbnailUrl:
                              type: string
                        metaData:
                          type: object
                          additionalProperties: true
                        publicationData:
                          type: object
                          properties:
                            createdAt:
                              type: string
                            updatedAt:
                              type: string
                            released:
                              type: boolean
                            releaseFrom:
                              type: string
                            releaseTo:
                              type: string
                  pagingData:
                    type: object
                    properties:
                      totalCount:
                        type: integer
                      itemCount:
                        type: integer
                      pageCount:
                        type: integer
                      pageSize:
                        type: integer
                      pageIndex:
                        type: integer
                x-examples:
                  Example 1:
                    metaData:
                      id: d70db4a4-f454-428b-a2fe-df37950a6c35
                      name: test_feed
                      title: Test feed
                      description: null
                      target: Unrestricted
                    itemData:
                      - id: f7669a91-f4df-4dc0-950c-94bd087a9d33
                        mediaData:
                          mediaType: OnDemand
                          entryId: 0_1o4osi6n
                          entryStatus: Ready
                          thumbnailUrl: 'https://open.http.mp.streamamg.com/p/3000759/sp/300075900/thumbnail/entry_id/0_1o4osi6n/'
                        metaData:
                          home_team: null
                          body: ''
                          home_players: []
                          multiselectdd: []
                          opta_fixture: null
                          content_name: []
                          away_players: []
                          competition: null
                          content_type: []
                          away_team: null
                          livescoreplayers: []
                          sysentryentitlements: []
                          ground: null
                          tournaments: []
                          country: null
                          createdat: null
                          VideoDuration: 183
                          optaseriesdropdown: null
                          opta_season: null
                          title: sample_1280x720_surfing_with_audio
                          episode: null
                          tags:
                            - ''
                        publicationData:
                          createdAt: '2022-11-25T16:34:19'
                          updatedAt: '2022-11-29T16:09:40'
                          released: true
                          releaseFrom: '2022-11-25T16:34:19'
                          releaseTo: '9999-12-31T23:59:59.9999999'
                    pagingData:
                      totalCount: 1
                      itemCount: 1
                      pageCount: 1
                      pageSize: 50
                      pageIndex: 0
        '401':
          description: |-
            Invalid API key or UserId

            {"Message":"The API Key is not present."}
            or
            {"Message":"The API Key is invalid."}
          content:
            application/json:
              schema:
                type: object
                properties:
                  Message:
                    type: string
                x-examples:
                  Example 1:
                    Message: The API Key is not present.
        '404':
          description: |-
            Invalid FeedId

            {"Message":"The feed was not found."}
          content:
            application/json:
              schema:
                type: object
                properties:
                  Message:
                    type: string
                x-examples:
                  Example 1:
                    Message: The feed was not found.
        '500':
          description: Internal Server Error
      operationId: get-api-v1-apiUserId-apiKey-languageCode-feed-feedId
      description: |-
        Returns the list of articles matching the rules defined in Feed and to be published without any restriction on location. 
        *Note all datetimes returned are in UTC format
  /events:
    get:
      summary: List available events
      description: |-
        ![In Review](https://img.shields.io/badge/Status-In%20Review-green?style=flat-square)
        Events API enables clients to retrieve information about fixtures such as matches, competitions, or press releases.
        
         This endpoint retrieves a list of events accessible to the end user, subject to the geo-restriction rules established during the event creation process. The returned events are determined based on the parameters provided at the time of the request. By default, the endpoint only returns events that are currently active or upcoming.
      operationId: list-events
      parameters:
        - in: query
          name: metaDataType
          schema:
            type: array
            items:
              type: string
          required: false
          description: Array of metadata types to filter events by.
        - in: query
          name: start
          schema:
            type: string
            enum:
              - YYYY-MM-DD
              - 'YYYY-MM-DD[T]HH:mm'
              - now
              - today
              - tomorrow
              - now.plus.1
              - now.minus.1
          required: false
          description: Limit the events to ones within the specified range. The 'end' parameter is typically used in combination with the 'start' param to form a date range. Example 'now.plus.n' should be provided in form now.plus.1 which resolved to now plus 1 day.
        - in: query
          name: end
          schema:
            type: string
            enum:
              - YYYY-MM-DD
              - 'YYYY-MM-DD[T]HH:mm'
              - now
              - today
              - tomorrow
              - now.plus.1
              - now.minus.1
          required: false
          description: Limit the events to ones within the specified range. The 'end' parameter is typically used in combination with the 'start' param to form a date range.  Example 'now.plus.n' should be provided in form now.plus.1 which resolved to now plus 1 day.
        - in: query
          name: pageSize
          schema:
            type: integer
            default: 10
          required: false
          description: Size of the page of results
        - in: query
          name: pageIndex
          schema:
            type: integer
            default: 0
          required: false
          description: Page index of results page to be returned
      tags:
        - Event
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
              examples:
                footballMatchEvent:
                  value:
                    eventData:
                      - id: cac5a29a-42ed-4218-b695-df8c89bf7049
                        priorityOrder: 1
                        title: Football Match
                        subtitle: Premier League
                        description: Manchester United vs Chelsea
                        scheduleData:
                          start: '2024-01-01T18:30:00'
                          end: '2024-01-01T20:30:00'
                          offset: '2024-01-01T18:00:00'
                        metaData:
                          type: footballMatch
                          footballMatch:
                            teams:
                              home:
                                name: Manchester United
                                logo: 'https://example.com/manchester_united_logo.png'
                              away:
                                name: Chelsea
                                logo: 'https://example.com/chelsea_logo.png'
                            competition: Premier League
                            season: 2023-2024
                            venue: Stadium
                        itemData:
                          - id: 37111304-c1f7-4c58-9944-9bfe64b53644
                            type: audio
                            thumbnailUrl: 'https://example.com/thumbnail.png'
                            mediaData:
                              legacyEntryId: '123'
                            metaData:
                              title: Football Match
                              body: Exciting match between Manchester United and Chelsea
                              tags:
                                - football
                                - premier league
                              sysentryentitlements:
                                - premium
                        integrationData:
                          optaId: eventOptaId
                    pagingData:
                      totalCount: 1
                      itemCount: 1
                      pageCount: 1
                      pageSize: 10
                      pageIndex: 0
                pressReleaseEvent:
                  value:
                    eventData:
                      - id: cac5a29a-42ed-4218-b695-df8c89bf7048
                        priorityOrder: 2
                        title: Press Release this week
                        subtitle: New coach joining the team!
                        scheduleData:
                          start: '2024-03-01T18:30:00'
                          end: '2024-03-01T20:30:00'
                        metaData:
                          type: pressRelease
                          pressRelease: {}
                        itemData:
                          - id: 37111304-c1f7-4c58-9944-9bfe64b53644
                            type: video
                            thumbnailUrl: 'https://example.com/thumbnail.png'
                            mediaData:
                              legacyEntryId: '123'
                            metaData:
                              title: This week's press release
                              body: First press release of our new coach
                              tags:
                                - press-release
                                - news
                              sysentryentitlements:
                                - '*'
                    pagingData:
                      totalCount: 1
                      itemCount: 1
                      pageCount: 1
                      pageSize: 10
                      pageIndex: 0
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  '/events/{id}':
    get:
      summary: Get a single event by ID
      operationId: get-event
      description: |-
        ![In Review](https://img.shields.io/badge/Status-In%20Review-green?style=flat-square)
        Events API enables clients to retrieve information about fixtures such as matches, competitions, or press releases. 
        
        Get specific event by id. If event is geo-resctriced for the location from which customer is accessing it. It will return Not Found. Both past and future events can be accessed by ID.
      parameters:
        - name: id
          in: path
          description: ID of the event to retrieve
          required: true
          schema:
            type: string
      tags:
        - Event
      responses:
        '200':
          description: Event object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found or not available in user's location
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  schemas:
    Events:
      title: Events Schema
      type: object
      properties:
        eventData:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        pagingData:
          type: object
          properties:
            totalCount:
              type: integer
            itemCount:
              type: integer
            pageCount:
              type: integer
            pageSize:
              type: integer
            pageIndex:
              type: integer
    Event:
      type: object
      required:
        - id
        - priorityOrder
        - title
        - scheduleData
      properties:
        id:
          description: event ID
          type: string
        priorityOrder:
          description: priority order that allows sorting of events
          type: integer
        title:
          description: main event title
          type: string
        subtitle:
          description: secondary event title
          type: string
        description:
          description: event description
          type: string
        scheduleData:
          $ref: '#/components/schemas/EventSchedule'
        metaData:
          $ref: '#/components/schemas/EventMetadata'
        itemData:
          type: array
          items:
            $ref: '#/components/schemas/Media'
        integrationData:
          type: object
          properties:
            optaFixtureId:
              description: Opta Fixture ID
              type: string
    MediaMetadata:
      type: object
      required:
        - title
        - body
        - sysentryentitlements
      properties:
        title:
          type: string
          description: media entry title
        body:
          type: string
          description: media entry description
        tags:
          type: array
          description: media entry tags
          items:
            type: string
        sysentryentitlements:
          type: array
          description: entitlements for media entry that permit suitable users to view it
          items:
            type: string
    Media:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          description: media entry Cloudmatrix ID
        type:
          type: string
          description: 'media type (audio, video)'
        thumbnailUrl:
          type: string
          description: URL to media thumbnail
        mediaData:
          $ref: '#/components/schemas/MediaData'
        metaData:
          $ref: '#/components/schemas/MediaMetadata'
    MediaData:
      type: object
      properties:
        legacyEntryId:
          type: string
          description: legacy media entry ID (e.g. Kaltura)
    EventMetadata:
      type: object
      required:
        - type
      properties:
        type:
          type: string
        footballMatch:
          $ref: '#/components/schemas/FootballMatchMetadata'
        tennisEvent:
          $ref: '#/components/schemas/EmptyPlaceholder'
        customEvent:
          $ref: '#/components/schemas/EmptyPlaceholder'
    EmptyPlaceholder:
      type: object
    FootballMatchMetadata:
      type: object
      properties:
        teams:
          type: object
          properties:
            home:
              type: object
              properties:
                name:
                  type: string
                logo:
                  type: string
            away:
              type: object
              properties:
                name:
                  type: string
                logo:
                  type: string
        competition:
          type: string
        season:
          type: string
        venue:
          type: string
    EventSchedule:
      type: object
      required:
        - start
        - end
      properties:
        start:
          type: string
          description: ISO 8601 start datetime
        end:
          type: string
          description: ISO 8601 end datetime
        offset:
          type: string
          description: ISO 8601 offset datetime when event can be advertised
  securitySchemes:
    x-api-key:
      name: x-api-key
      type: apiKey
      in: header
      description: ''
