openapi: 3.1.0
info:
  title: Upload API
  version: '1.0'
  summary: An API to facilitate the uploading of media Content into StreamAMGs CloudMatrix & MediaPlatform Products
  description: |-
    The CloudMatrix Upload API provides clients with the functionality to upload Media Content via a HTTP API with no dependencies on a technology or framework.

    The upload functionality allows clients to upload Rich Metadata alongside their media so that it is automatically available within CloudMatrix once the media entry is processed via MediaPlatform. 
servers: []
paths:
  /upload:
    parameters: []
    put:
      summary: Upload
      operationId: put-upload
      responses:
        '200':
          description: OK
      description: |
        In order to upload a media entry, first a initial API call to retrive a signed URL must be generated. This signed URL will allow you to directly upload the media binary to the storage location via HTTP.
      tags:
        - Upload
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
        description: The body should contain the additional CloudMatrix Metadata you would like to store along side the entry.
  /multipart/start:
    put:
      summary: Start Multipart Upload
      operationId: put-multipart-start
      responses:
        '200':
          description: OK
      description: ''
      tags:
        - Multipart
  /multipart/complete:
    put:
      summary: Start Multipart Upload
      operationId: put-multipart-start
      responses:
        '200':
          description: OK
      description: ''
      tags:
        - Multipart
    parameters: []
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
