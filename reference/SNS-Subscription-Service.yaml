x-internal: true
x-stoplight:
  id: tqnb0nc0s88d2
openapi: 3.1.0
info:
  title: SNS Subscription API Reference
  version: "1.0"
  contact:
    name: ""
    email: ""
  summary: Internal SNS Subscription Service API for CloudMatrix.
  description: |-
    The SNS Subscription Service API exposes the functionality to create, read and delete CloudMatrix SNS Subscription 
    Webhooks and is for internal use only (typically the CloudMatrix UI will utilise these endpoints to allow users to manage their subscriptions).
servers:
  - url: "https://service.cloudmatrix.streamamg.com/v1/"
paths:
  "/subscription/{id}":
    delete:
      summary: Delete an SNS Subscription from CloudMatrix
      description: |-
        This endpoint deletes an existing subscription based on its unique id. The client must provide a valid tenant-id in the request headers to identify the tenant context under which the subscription operates.
        If successful, the server responds with a 204 No Content status, indicating that the subscription was deleted without returning any content in the response body.

        Note: that this is a full removal of the entry, not a soft removal.

        The user must first be authenticated (via an API-Key). This token should be passed during the API call through the 'x-api-key' header.
      tags:
        - SNS-Subscription
      operationId: delete-sns-subscription
      security:
        - ApiKey: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: SNS Subscription in CloudMatrix to be deleted
        - in: header
          name: tenant-id
          description: The unique identifier of the tenant
          required: true
          schema:
            type: string
            format: uuid
        - in: header
          name: x-api-key
          description: The x-api-key
          required: true
          schema:
            type: string
            format: string
      responses:
        "204":
          description: SNS Subscription is deleted in CloudMatrix
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                description: Invalid/Missing API Key
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                Invalid API Key:
                  value:
                    message: API Key not provided or not valid
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                description: "Subscription: {id} not found"
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                  statusCode:
                    type: number
                    enum:
                      - 404
                required:
                  - message
                  - error
                  - statusCode
              examples:
                Invalid Event Id:
                  value:
                    message: "Subscription: 354a82b8-fb50-45fe-8b78-c952b06e2a82 not found"
                    error: Not Found
                    statusCode: 404
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Error deleting SNS Subscription data
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                  statusCode:
                    type: number
                    enum:
                      - 500
                required:
                  - statusCode
                  - message
                  - error
              examples:
                Internal Server Error:
                  value:
                    message: "Subscription deletion failed"
                    error: Internal Server Error
                    statusCode: 500
    get:
      summary: Retrieve an SNS Subscription from CloudMatrix
      description: |-
        This endpoint retrieves an existing subscription based on its unique id. The client must provide a valid tenant-id in the request headers to identify the tenant context under which the subscription operates.
        If successful, the server responds with a 200 OK status, indicating that the subscription was retrieved, returning any content in the response body.

        The user must first be authenticated (via an API-Key). This token should be passed during the API call through the 'x-api-key' header.
      tags:
        - SNS-Subscription
      operationId: retrieve-sns-subscription
      security:
        - ApiKey: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: SNS Subscription in CloudMatrix retrieved
        - in: header
          name: tenant-id
          description: The unique identifier of the tenant
          required: true
          schema:
            type: string
            format: uuid
        - in: header
          name: x-api-key
          description: The x-api-key
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: SNS Subscription retrieved in CloudMatrix
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SNSSubscriptionResponse"
              examples:
                Example - Success:
                  value:
                    id: "4a5b0d0c-2f1b-4e9f-b0f0-6a97e91a1234"
                    tenantId: "3c565fca-c792-469d-a745-8d202261b35f"
                    endpoint: "https://www.example-sns-endpoint.com"
                    eventTypes: ["article.update"]
                    createdAt: "2024-11-21T19:00:00Z"
                    status: "PENDING"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                description: Invalid/Missing API Key
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                Invalid API Key:
                  value:
                    message: API Key not provided or not valid
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                description: "Subscription: {id} not found"
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                  statusCode:
                    type: number
                    enum:
                      - 404
                required:
                  - message
                  - error
                  - statusCode
              examples:
                Invalid Event Id:
                  value:
                    message: "Subscription: 354a82b8-fb50-45fe-8b78-c952b06e2a82 not found"
                    error: Not Found
                    statusCode: 404
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Error retrieving SNS Subscription data
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                  statusCode:
                    type: number
                    enum:
                      - 500
                required:
                  - message
                  - error
                  - statusCode
              examples:
                Internal Server Error:
                  value:
                    message: "Subscription retrieval failed"
                    error: Internal Server Error
                    statusCode: 500
      x-stoplight:
        id: zfms911lbsgx2
    parameters:
      - schema:
          type: string
        in: header
        name: tenant-id
        description: UUID identifying tenant
        required: true
  /subscription:
    get:
      summary: Retrieve all SNS Subscription(s) in CloudMatrix for a Given Tenant
      description: |
        This endpoint retrieves all subscription(s) for a specified tenant. The client must provide a valid tenant-id in the request headers and the subscription data in the request body.
        If successful, the server responds with a 200 OK status returning all SNS Subscriptions associated.

        This endpoint uses parameters:
          - pageSize: The number of items to retrieve per page
          - exclusiveStartKey: id of the last item returned in the previous request.
               <b>NOTE</b>:  Will only show if count returned is greater than pageSize

        The user must first be authenticated (via an API-Key). This token should be passed during the API call through the 'x-api-key' header.
      tags:
        - SNS-Subscription
      security:
        - ApiKey: []
      parameters:
        - in: header
          name: tenant-id
          description: The unique identifier of the tenant
          required: true
          schema:
            type: string
            format: uuid
        - in: header
          name: x-api-key
          description: The x-api-key
          required: true
          schema:
            type: string
            format: string
        - schema:
            type: string
            default: "10"
          in: query
          name: pageSize
          description: Size of the page of results
        - schema:
            type: string
            # default: "null"
          in: query
          name: exclusiveStartKey
          description: id of the last item returned in the previous request
          optional: true
      operationId: get-all-sns-subscription
      responses:
        "200":
          description: All SNS Subscription in CloudMatrix for a Given Tenant
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SNSSubscriptionListResponse"
              examples:
                Successful response:
                  value:
                    items:
                      - id: "4a5b0d0c-2f1b-4e9f-b0f0-6a97e91a1234"
                        tenantId: "3c565fca-c792-469d-a745-8d202261b35f"
                        endpoint: "https://www.example-sns-endpoint.com"
                        eventTypes: ["article.update"]
                        createdAt: "2024-11-21T19:00:00Z"
                        status: "PENDING"
                      - id: "731f576b-ee29-4369-bbaa-a6b43ef276f0"
                        tenantId: "3c565fca-c792-469d-a745-8d202261b35f"
                        endpoint: "https://www.example-sns-endpoint.com"
                        eventTypes: ["article.restore"]
                        createdAt: "2024-10-09T19:00:00Z"
                        status: "COMPLETED"
                    pagination:
                      totalCount: 2
                      pageSize: 10
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                description: Invalid request
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    enum:
                      - Bad Request
                  statusCode:
                    type: number
                    enum:
                      - 400
                required:
                  - message
                  - error
                  - statusCode
              examples:
                Invalid Parameter:
                  value:
                    message: "To be defined"
                    error: Bad Request
                    statusCode: 400
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                description: Invalid/Missing API Key
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                Invalid API Key:
                  value:
                    message: Forbidden
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Error retrieving all of tenant-id SNS Subscription data
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                  statusCode:
                    type: number
                    enum:
                      - 500
                required:
                  - message
                  - error
                  - statusCode
              examples:
                Internal Server Error:
                  value:
                    message: "Retrieving Subscriptions failed"
                    error: Internal Server Error
                    statusCode: 500
    post:
      summary: Create an SNS Subscription in CloudMatrix
      description: |
        This endpoint creates a new SNS subscription for a specified CloudMatrix tenant. The client must provide a valid tenant-id in the request headers and the subscription data in the request body.
        If successful, the server responds with a 201 Created status, confirming that the subscription was successfully created.

        The user must first be authenticated (via an API-Key). This token should be passed during the API call through the 'x-api-key' header.
      tags:
        - SNS-Subscription
      security:
        - ApiKey: []
      parameters:
        - in: header
          name: tenant-id
          description: The unique identifier of the tenant
          required: true
          schema:
            type: string
            format: uuid
        - in: header
          name: x-api-key
          description: The x-api-key
          required: true
          schema:
            type: string
            format: string
      operationId: create-sns-subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSNSSubscription"
            examples:
              SNS Subscription (article.update):
                value:
                  endpoint: "https://www.example-sns-endpoint.com"
                  eventTypes: ["article.update"]
              SNS Subscription (article.delete):
                value:
                  endpoint: "https://www.example-sns-endpoint.com"
                  eventTypes: ["article.delete"]
              SNS Subscription (article.restore):
                value:
                  endpoint: "https://www.example-sns-endpoint.com"
                  eventTypes: ["article.restore"]
              SNS Subscription (config.update):
                value:
                  endpoint: "https://www.example-sns-endpoint.com"
                  eventTypes: ["config.update"]
      responses:
        "201":
          description: Created SNS Subscription in CloudMatrix
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SNSSubscriptionResponse"
              examples:
                Example - Success:
                  value:
                    id: "4a5b0d0c-2f1b-4e9f-b0f0-6a97e91a1234"
                    tenantId: "3c565fca-c792-469d-a745-8d202261b35f"
                    endpoint: "https://www.example-sns-endpoint.com"
                    eventTypes: ["article.update"]
                    createdAt: "2024-11-21T19:00:00Z"
                    status: "PENDING"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                description: Invalid request data for the event to create
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    enum:
                      - Bad Request
                  statusCode:
                    type: number
                    enum:
                      - 400
                required:
                  - message
                  - error
                  - statusCode
              examples:
                Invalid Event Identifier:
                  value:
                    message: "each value in eventTypes must be one of the following values: article.update, article.delete, article.restore, config.update"
                    error: Bad Request
                    statusCode: 400
                Unreachable Endpoint:
                  value:
                    message: "Unreachable Endpoint"
                    error: Bad Request
                    statusCode: 400
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                description: Invalid/Missing API Key
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                Invalid API Key:
                  value:
                    message: Forbidden
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                description: Subscription already exists
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    enum:
                      - Conflict
                  statusCode:
                    type: number
                    enum:
                      - 409
                required:
                  - message
                  - error
                  - statusCode
              examples:
                Subscription already exists:
                  value:
                    message: "Subscription already exists"
                    error: Conflict
                    statusCode: 409
                Subscription already exists with different eventTypes:
                  value:
                    message: "Subscription already exists with different attributes"
                    error: Conflict
                    statusCode: 409
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Error creation SNS Subscription data
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                  statusCode:
                    type: number
                    enum:
                      - 500
                required:
                  - message
                  - error
                  - statusCode
              examples:
                Internal Server Error:
                  value:
                    message: "Subscription creation failed"
                    error: Internal Server Error
                    statusCode: 500
      x-stoplight:
        id: p7xw6sda7vuh1
    parameters:
      - schema:
          type: string
        in: header
        name: tenant-id
        description: UUID identifying tenant
        required: true
  /subscription/audit:
    get:
      summary: Retrieve all SNS delivery logs in CloudMatrix for a destination
      description: |
        This endpoint retrieves all log(s) for a specified destination. The client must provide a valid tenant-id in the request headers.
        If successful, the server responds with a 200 OK status returning all SNS logs associated.

        This endpoint uses parameters:
          - pageSize: The number of items to retrieve per page
          - exclusiveStartKey: id of the last item returned in the previous request.
            <b>NOTE</b>:  Will only show if count returned is greater than pageSize
          - destination: The destination URL to filter the logs by     
          - timestamp: is used for pagination. The timestamp of the last log returned in the previous request. 
            <b>NOTE</b>:  Should be passed together with exclusiveStartKey           

        The user must first be authenticated (via an API-Key). This token should be passed during the API call through the 'x-api-key' header.
      tags:
        - SNS-Logs

      security:
        - ApiKey: []
      parameters:
        - in: header
          name: tenant-id
          description: The unique identifier of the tenant
          required: true
          schema:
            type: string
            format: uuid
        - in: header
          name: x-api-key
          description: The x-api-key
          required: true
          schema:
            type: string
            format: string
        - schema:
            type: string
            default: "10"
          in: query
          name: pageSize
          description: Size of the page of results
        - schema:
            type: string
            # default: "null"
          in: query
          name: exclusiveStartKey
          description: id of the last item returned in the previous request
          optional: true
        - schema:
            type: string
          in: query
          name: timestamp
          description: timestamp of the last log returned in the previous request
        - schema:
            type: string
          in: query
          name: destination
          description: destination URL to filter the logs by
          required: true
        - schema:
            type: string
            in: query
            name: timestamp
            description: timestamp of the last log returned in the previous request
      operationId: get-all-sns-subscription
      responses:
        "200":
          description: All SNS Logs in CloudMatrix for a Given Destination
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogsListResponse"
              examples:
                Successful response:
                  value:
                    items:
                      - messageId: "adb526de-830e-51b9-94f3-790df365672e"
                        lastUpdated: "2024-12-11T10:49:39.664Z"
                        statusCode: 404,
                        deliveryTimestamp: "2024-12-11T10:49:39.664Z"
                        status: "FAILURE"
                        destination: "https://0909-2001-818-e781-cc00-a053-7bf4-aeb3-23bf.ngrok-free.app"
                        failureReason": "Not Found"
                        attempts: 1
                        eventTypes: "article.update"
                        entryId: "4a5b0d0c-2f1b-4e9f-b0f0-6a97e91a1234"
                        mediaReady: true

                      - messageId: "6f70192d-8e02-40bb-8caa-5be21aa5c901"
                        destination: "https://0909-2001-818-e781-cc00-a053-7bf4-aeb3-23bf.ngrok-free.app"
                        lastUpdated: "2024-12-09T16:57:02.963Z"
                        statusCode: 200
                        deliveryTimestamp: "2024-12-09T16:57:02.963Z"
                        status: "SUCCESS"
                        eventType: "config.update"
                        entitlement: ["paidEntitlement"]

                    pagination:
                      totalCount: 2
                      pageSize: 10
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                description: Invalid request
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    enum:
                      - Bad Request
                  statusCode:
                    type: number
                    enum:
                      - 400
                required:
                  - message
                  - error
                  - statusCode
              examples:
                Invalid Parameter:
                  value:
                    message: "Destination is required"
                    error: Bad Request
                    statusCode: 400
                Invalid Pagination Parameters:
                  value:
                    message: "Both exclusiveStartKey and timestamp must be provided together."
                    error: Bad Request
                    statusCode: 400
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                description: Invalid/Missing API Key
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                Invalid API Key:
                  value:
                    message: Forbidden
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Error retrieving logs for destination
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                  statusCode:
                    type: number
                    enum:
                      - 500
                required:
                  - message
                  - error
                  - statusCode
              examples:
                Internal Server Error:
                  value:
                    message: "Retrieving logs failed"
                    error: Internal Server Error
                    statusCode: 500

  /subscription/sync:
    post:
      summary: Start a sync of all articles for the given timestamp and destination
      description: |
        This endpoint checks for articles that were updated within a specified time range and resends the latest state of those articles to the specified destination
        The client must provide a valid tenant-id in the request headers.        

        The user must first be authenticated (via an API-Key). This token should be passed during the API call through the 'x-api-key' header.
      tags:
        - SNS-Resync

      security:
        - ApiKey: []
      parameters:
        - in: header
          name: tenant-id
          description: The unique identifier of the tenant
          required: true
          schema:
            type: string
            format: uuid
        - in: header
          name: x-api-key
          description: The x-api-key
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResyncSubscription"
            examples:
              Resync Subscription:
                value:
                  subscriptionId: "4a5b0d0c-2f1b-4e9f-b0f0-6a97e91a1234"
                  startTime: "2024-12-01T00:00:00Z"
                  endTime: "2024-12-10T23:59:59Z"

      responses:
        responses:
        "201":
          description: Resync Subscription in CloudMatrix
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResyncSubscriptionResponse"
              examples:
                Example - Success:
                  value:
                    message: "Subscription resync triggered successfully"
                    statusCode: 201
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                description: Invalid request data for the event to create
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    enum:
                      - Bad Request
                  statusCode:
                    type: number
                    enum:
                      - 400
                required:
                  - message
                  - error
                  - statusCode
              examples:
                Missing Subscription Id:
                  value:
                    message:
                      - "subscriptionId must be a UUID"
                      - "subscriptionId must be a string"
                    error: Bad Request
                    statusCode: 400
                Missing Start Time:
                  value:
                    message:
                      - "startTime must be a valid ISO 8601 date string"
                      - "startTime must be a string"
                    error: Bad Request
                    statusCode: 400
                Missing End Time:
                  value:
                    message:
                      - "endTime must be a must be a valid ISO 8601 date string"
                      - "endTime must be a string"

                    error: Bad Request
                    statusCode: 400
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                description: Invalid/Missing API Key
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                Invalid API Key:
                  value:
                    message: API Key not provided or not valid

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Subscription resync failure
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                  statusCode:
                    type: number
                    enum:
                      - 500
                required:
                  - message
                  - error
                  - statusCode
              examples:
                Internal Server Error:
                  value:
                    message: "Subscription resync failed"
                    error: Internal Server Error
                    statusCode: 500
components:
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: x-api-key
  schemas:
    CreateSNSSubscription:
      type: object
      x-stoplight:
        id: gey87qt7ekx7o
      title: CreateSNSSubscription
      required:
        - endpoint
        - eventTypes
      properties:
        endpoint:
          type: string
          minLength: 1
          description: endpoint to send the SNS message to
        eventTypes:
          type: array
          minimum: 0
          description: array of event types to subscribe to ['article.update', 'article.delete', 'article.restore', 'config.update']
    SNSSubscriptionResponse:
      type: object
      x-stoplight:
        id: gey81qt7eka7o
      title: SNSSubscriptionResponse
      required:
        - endpoint
        - eventTypes
      properties:
        id:
          type: string
          format: uuid
          description: unique identifier for the subscription
        tenantId:
          type: string
          minLength: 1
          description: tenant identifier
        endpoint:
          type: string
          minLength: 1
          description: endpoint to send the SNS message to
        eventTypes:
          type: array
          minimum: 0
          description: array of event types to subscribe to ['article.update', 'article.delete', 'article.restore', 'config.update']
        createdAt:
          type: string
          format: string
          description: date and time the subscription was created
        status:
          type: string
          minLength: 0
          description: status of the subscription
    AuditLogsResponse:
      type: object
      x-stoplight:
        id: gey81qt7eka7o
      title: AuditLogsResponse
      required:
        - messageId
        - status
        - statusCode
        - lastUpdated
        - deliveryTimestamp
        - destination
        - eventType
      properties:
        messageId:
          type: string
          format: uuid
          description: SNS notification identifier
          required: true
        destination:
          type: string
          minLength: 1
          description: webhook endpoint
          required: true
        status:
          type: string
          minLength: 1
          description: delivery status
          required: true
        statusCode:
          type: number
          minimum: 0
          description: HTTP status code
          required: true
        lastUpdated:
          type: string
          format: string
          description: date and time the log was created
          required: true
        deliveryTimestamp:
          type: string
          minLength: 0
          description: date and time the log was delivered
          required: true
        failureReason":
          type: string
          minLength: 0
          description: reason for failure
          optional: true
        attempts:
          type: number
          minimum: 1
          description: number of delivery attempts
          optional: true
        eventType:
          type: string
          minLength: 1
          description: event type
          required: true
        entryId:
          type: string
          description: unique identifier for the subscription (uuid or MP id)
          optional: true
        entitlement:
          type: array
          minLength: 1
          description: entitlement value on config.update event
          optional: true
        mediaReady:
          type: boolean
          description: true or false boolean value to advise if media is ready to be used
          optional: true
    ResyncSubscription:
      type: object
      x-stoplight:
        id: gey87qt7ekx7o
      title: ResyncSubscription
      required:
        - subscriptionId
        - startTime
        - endTime
      properties:
        subscriptionId:
          type: string
          minLength: 1
          description: id of the subscription to resync
        startTime:
          type: string
          format: date-time
          description: start time of the resync period
        endTime:
          type: string
          format: date-time
          description: end time of the resync period
    ResyncSubscriptionResponse:
      type: object
      x-stoplight:
        id: gey81qt7eka7o
      title: ResyncSubscriptionResponse
      required:
        - message
        - statusCode
      properties:
        message: string
        statusCode: number

    SNSSubscriptionListResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/SNSSubscriptionResponse"
        pagination:
          $ref: "#/components/schemas/Pagination"
    Pagination:
      type: object
      x-stoplight:
        id: 9576201547f2d
      properties:
        totalCount:
          type: integer
          x-stoplight:
            id: 9n82xqtwy974s
        pageSize:
          type: integer
        exclusiveStartKey:
          type: uuid
    LogsListResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/AuditLogsResponse"
        pagination:
          $ref: "#/components/schemas/Pagination"

  tags:
    - name: SNS-Subscription
